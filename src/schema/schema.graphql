### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Answer {
  index: Int
  scoreDelta: Int
  text: String!
  users: [User]
}

type AuthInfo {
  token: String!
  user: User!
}

type Group {
  id: ID!
  question: Question
  state: GroupState!
  users: [User!]!
}

enum GroupState {
  FINAL_RESULTS
  IN_PROGRESS
  SHOWING_RESULTS
  WAITING_FOR_PLAYERS
}

type Mutation {
  createGroup: Group
  createUser(name: String!): AuthInfo!
  joinGroup(groupId: ID!): Group
  leaveGroup: Void
  logout: Void
  markUserReady(ready: Boolean!): Void
  submitAnswer(answerIndex: Int!): Void
}

type Query {
  groupById(id: String!): Group
}

type Question {
  answers: [Answer!]!
  end: String!
  groupId: ID!
  id: ID!
  round: Int!
  type: QuestionType!
}

enum QuestionType {
  AGREE
  DISAGREE
}

type Subscription {
  groupUpdated: Group
}

type User {
  groupId: ID
  id: ID!
  name: String!
  score: Int
}

scalar Void